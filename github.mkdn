github使用笔记
=============


git下载命令
----------
以Android-Kitchen为例

### 首次下载
	git clone https://github.com/dsixda/Android-Kitchen.git
	//github目录到名称是区分大小写的，如果提示远程链接不上，检查一下大小写

### 已经下载过，拷贝到别的地方去
复制.git并改名为Android-Kitchen.git，放到想要存放仓库的上级目录，比如~下
	
	git clone Android-Kitchen.git
	//即clone本地仓库Android-Kitchen.git
	//不过这样origin就变成本地了，而不是远程的https://github.com/dsixda/Android-Kitchen.git了
	到/.git/config文件中，将origin改回来


设定Github的SSH Key
------------------
	ssh-keygen -t rsa -C "committer_email@committermail.com"  
	//创建个新的SSH key

设定存放目录和密码后把.ssh/id_rsa.pub的文件内容粘贴进github的帐号里

	ssh -T git@github.com 
	//测试是否成功
	//会询问yes还是no，要手动输入yes才可以  

如果出现"Agent admitted failure to sign using the key"

则解決方法是使用 ssh-add 指令将私钥加进来（有多个密钥时，可根据实际情况改名xxx_rsa）

	ssh-add   ~/.ssh/id_rsa

Git常用命令
----------
	git branch ics
	git checkout ics
	git status
	git remote add PhiloSky git://github.com/bluewater-cn/android_hardware_libhardware.git
	git pull PhiloSky ics
	//=git fetch PhiloSky+git merge PhiloSky/ics
### 做了修改之后
	git add .
	git commit -a -m "..."
	git push PhiloSky ics
### 撤销某次提交
	git revert xxxxxxx
	//xxxxx代表某次提交的ID
### 删除某次提交之后的所有提交
	git reset --hard harshcodexxxx
	//harshcodexxxx表示某次提交的harsh码，如果删除的提交中有tags，最好也删除，便于系统回收

### 当前在no branch里，合并no branch的内容到新分支ics
	git log -1
	git branch ics
	git checkout ics
	git merge xxxx(最后一次提交的ID)
	或者 
	git checkout -b ics一条搞定（新建ics分支，并merge no branch）

### 如果想单独repo sync某个项目
	repo sync project1 (project2 project3 ...)
	
	
###查看当前的远程库

	git remote
	//也可以加上 -v 选项(译注:此为 –verbose 的简写,取首字母),显示对应的克隆地址:
	git remote -v
    
###添加远程仓库

要添加一个新的远程仓库,可以指定一个简单的名字,以便将来引用,运行 git remote add [shortname] [url]:

	git remote add pb git://github.com/paulboone/ticgit.git
	//这里只是添加了远程仓库，但并没有pull下来远程分支，所以git branch -a时还没有此远程仓库的任何信息
	当输入了一次git pull之后才会pull下远程仓库的分支
***注意远程仓库和远程分支的区别**


###远程仓库的删除和重命名

在新版 Git 中可以用 git remote rename 命令修改某个远程仓库的简短名称,比如想把 pb 改成 paul,可以这么运行:

	git remote rename pb paul
	//注意,对远程仓库的重命名,也会使对应的分支名称发生变化,原来的 pb/master 分支现在成了paul/master.

碰到远端仓库服务器迁移,或者原来的克隆镜像不再使用,又或者某个参与者不再贡献代码,那么需要移除对应的远端仓库,可以运行 git remote rm 命令:

	git remote rm paul

###git本地分支branchname与远程仓库remoterepo的分支branchname关联
（前提是远程分支已加入，即git branch -a列出的分支包含remoterepo/branchname）

	git branch --set-upstream branchname remoterepo/branchname

结果是在项目目录下 .git/config中添加如下内容

	[branch "branchname"]
		remote = remoterepo
		merge = refs/heads/branchname
如果是新建分支跟踪远程库，则应该

	git branch --track branchname remoterepo/branchname
加入跟踪后，如果要跟进，只需git pull即可

###如果当前没有该远程分支（只有远程仓库）
则应该手动加入跟踪属性

	git config branch.branchname.remote remoterepo
	//remote属性
	git config branch.branchname.merge refs/heads/branchname
	//merge属性
之后切换到branchname分支下，直接git pull即可

###修正前一次提交

有时候我们提交了一次之后发现漏了东西，我们确实不想为了这个漏的东西而做一次单独的提交。让我们直接修正前一次的提交。

	git add file.name
	git commit --amend -m "make a comment"
再看log的时候就会发现上一次的提交已经没了，换成了这次的提交


###git删除分支

####删除本地分支

	git branch -d <分支名>

如果该分支没有合并到主分支会报错，可以用以下命令强制删除

	git branch -D <分支名>

####删除远程分支
首先要确保远端仓库当前分支不是要删除的分支。

删除远程分支branchname的命令如下： 

	git push origin :heads/branchname 

这里的origin是远程仓库的名称